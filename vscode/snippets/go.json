{
	"IfError": {
		"prefix": "errnil",
		"body": [
			"if err != nil {",
			"\t$0$TM_SELECTED_TEXT",
			"}"
		],
		"description": "If err != nil"
	},
	"If Error Return Error": {
		"prefix": "errnilr",
		"body": [
			"if err != nil {",
			"\t$0return err",
			"}"
		],
		"description": "If err != nil return err"
	},
	"If Error log fatal error": {
		"prefix": "errnillf",
		"body": [
			"if err != nil {",
			"\t$0return err",
			"}"
		],
		"description": "If err != nil log fatal err"
	},
	"Assert Nil Error": {
		"prefix": "errnilass",
		"body": [
			"assert.NilError(t, err)",
		],
		"description": "Assert.NilError"
	},
	"Print": {
		"prefix": "fmp",
		"body": "fmt.Println($0$TM_SELECTED_TEXT)"
	},
	"Print Variable": {
		"prefix": "fmv",
		"body": "fmt.Printf(\"${1|%s,%+v,%d|}\", $0$TM_SELECTED_TEXT)",
		"description": "Print variable"
	},
	"Spew Dump": {
		"prefix": "spd",
		"body": [
			"fmt.Fprintf(os.Stderr,`",
			"============================================",
			"%s",
			"============================================",
			"`, spew.Sdump($0$TM_SELECTED_TEXT))",
		],
		"description": "Spew Dump a variable"
	}
}